(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{414:function(t,a,s){"use strict";s.r(a);var n=s(44),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("blockquote",[s("p",[t._v("HTML的职责是告诉浏览器如何组织页面，以及搭建页面的基本结构；")]),t._v(" "),s("p",[t._v("CSS用来装饰HTML，丰富页面元素；")]),t._v(" "),s("p",[t._v("JavaScript可以丰富页面功能，使静态页面动起来。")])]),t._v(" "),s("blockquote",[t._v("\n<!DOCTYPE html> 表示文档类型，告诉浏览器如何解析网页。\n")]),t._v(" "),s("blockquote",[s("p",[t._v("head的子元素一般包含7个")]),t._v(" "),s("ul",[s("li",[t._v("meta：设置网页的元数据。")])]),t._v(" "),s("meta",{attrs:{charset:"utf-8"}})]),t._v(" "),s("meta",{attrs:{name:"viewport",content:"width=device-width, initial-scale=1"}}),t._v("\n> \n> 1. charset属性：用来指定网页的编码方式。\n> 2. name属性、content属性：name表示元数据的名字，content表示元数据的值\n> 3. http-equiv属性、content属性：http-equiv用来覆盖http回应的头信息字段，content是对应的子段内容\n> \n> - link：链接外部样式表\n> - title：设置网页标题\n> - style：放置内嵌的样式表\n> - noscript：浏览器不支持脚本时，所要显示的内容\n> - base：设置网页内部相对URL的计算基准\n"),s("p",[t._v("tableindex：表示浏览器允许使用tab键获取焦点。为负整数时，可以获取焦点但不参与tab键对网页元素的遍历。")]),t._v(" "),s("p",[t._v("data-属性：用于放置自定义数据。只能通过css或javascript利用。")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[t._v("/* HTML 代码如下\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("data-role")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("mobile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\nMobile only content\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v('\n*/\ndiv[data-role="mobile"] {\n  display:none;\n}\n\n/* HTML 代码如下\n'),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("data-content")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("This is the div content"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("test"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("​\n*/\n.test {\n  display: inline-block;\n}\n.test:after {\n  content: attr(data-content);\n}\n")])])]),s("blockquote",[s("p",[s("strong",[t._v("文本标签")])]),t._v(" "),s("blockquote",[t._v("是一个块级标签，表示引用他人的话。浏览器会在样式上，与正常文本区别显示。\n"),s("blockquote",[t._v("标签有一个cite属性，它的值是一个网址，表示引言来源，不会显示在网页上。\n"),s("p",[s("cite",[t._v(" 标签表示引言出处或者作者，浏览器默认使用斜体显示这部分内容。")])]),t._v(" "),s("p",[s("code",[t._v("标签是一个行内元素，表示标签内容是计算机代码，浏览器默认会以等宽字体显示。")])])]),t._v(" "),s("p",[t._v("HTML结构：")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("html")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("head")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("head")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("html")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("html")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" 是页面的根元素，它描述完整的网页\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("head")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" 包含在HTML页面，但不显示在看到的页面里\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" 用户最后看到的内容\n")])])]),s("p",[t._v("浏览器加载页面时会使用GUI渲染线程和JavaScript引擎线程，GUI负责渲染浏览器的HTML元素，JavaScript负责处理脚本程序。JS在执行中，可能会有操作DOM的操作，所以和渲染线程为互斥关系，GUI会等待JS执行后，再继续工作。")]),t._v(" "),s("p",[t._v("浏览器在渲染页面的过程需要解析 HTML、CSS 以得到 DOM 树和 CSS 规则树，它们结合后才生成最终的渲染树并渲染。因此，我们还常常将 CSS 放在"),s("code",[t._v("<head>")]),t._v("里，可用来避免浏览器渲染的重复计算。")]),t._v(" "),s("p",[s("strong",[t._v("HTML和DOM有什么不同？")])]),t._v(" "),s("p",[t._v("DOM是用来操作和描述HTML文档的接口。浏览器用HTML来描述网页的结构并渲染，DOM就可以获取网页结构并进行操作。我们会使用JS来操作DOM，从而实现页面的动态变化，以及用户的交互操作。")]),t._v(" "),s("p",[s("strong",[t._v("操作 DOM")])]),t._v(" "),s("p",[t._v("除了获取 DOM 结构以外，通过 HTML DOM 相关接口，我们还可以使用 JavaScript 来访问 DOM 树中的节点，也可以创建或删除节点。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取到 class 为 swiper-control 的第一个节点，这里得到我们的滚动控制面板")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" controlPanel "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementsByClassName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"swiper-control"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取滚动控制面板的第一个子节点")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里是“就业率口碑训练营限时抄底”文本所在的子列")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" firstChild "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" controlPanel"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstElementChild"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 删除滚动控制面板的子节点")]),t._v("\ncontrolPanel"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeChild")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("firstChild"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("虚拟 DOM 其实是用来模拟真实 DOM 的中间产物，它的设计大致可分成 3 个过程：")]),t._v(" "),s("ol",[s("li",[t._v("用 JavaScript 对象模拟 DOM 树，得到一棵虚拟 DOM 树；")]),t._v(" "),s("li",[t._v("当页面数据变更时，生成新的虚拟 DOM 树，比较新旧两棵虚拟 DOM 树的差异；")]),t._v(" "),s("li",[t._v("把差异应用到真正的 DOM 树上。")])]),t._v(" "),s("p",[s("strong",[t._v("事件委托")])]),t._v(" "),s("p",[t._v("浏览器中各个元素从页面中接收事件的顺序包括事件捕获阶段、目标阶段、事件冒泡阶段。其中，基于事件冒泡机制，我们可以实现将子元素的事件委托给父级元素来进行处理，这便是事件委托。")]),t._v(" "),s("p",[t._v("使用事件委托的方式，我们可以大量减少浏览器对元素的监听，也是在前端性能优化中比较简单和基础的一个做法。")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);