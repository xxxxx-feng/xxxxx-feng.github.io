(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{402:function(t,v,_){"use strict";_.r(v);var r=_(44),s=Object(r.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h4",{attrs:{id:"dns是如何解析的-如何优化"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#dns是如何解析的-如何优化"}},[t._v("#")]),t._v(" DNS是如何解析的？如何优化")]),t._v(" "),_("p",[t._v("浏览器缓存 -> 本地缓存-> hosts文件 -> 路由器缓存 -> ISP DNS缓存 -> DNS递归查询")]),t._v(" "),_("h4",{attrs:{id:"强缓存和协商缓存"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#强缓存和协商缓存"}},[t._v("#")]),t._v(" 强缓存和协商缓存")]),t._v(" "),_("p",[t._v("强缓存和协商缓存。强缓存通过响应头实现：expires和cache-control。它表示在缓存期间不需要在发起请求。协商缓存：如果缓存过期，可以使用协商缓存解决问题。")]),t._v(" "),_("p",[t._v("协商缓存是需要发起请求。协商缓存需要客户端和服务端共同实现。")]),t._v(" "),_("h4",{attrs:{id:"html5的离线存储技术"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#html5的离线存储技术"}},[t._v("#")]),t._v(" html5的离线存储技术")]),t._v(" "),_("p",[t._v("html5的离线存储技术，是基于一个新建的.appcache文件的缓存机制（并不是存储技术）。通过这个文件上的解析清单离线存储资源，这些资源就会想cookie一样被存下来。之后网络处于离线状态时，浏览器会通过被离线存储的数据进行页面展示。")]),t._v(" "),_("h4",{attrs:{id:"link和import区别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#link和import区别"}},[t._v("#")]),t._v(" link和import区别")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("link")]),t._v(" "),_("th",[t._v("import")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("页面被加载，link会同时被加载")]),t._v(" "),_("td",[t._v("@import引用的css会等到页面被加载完成之后再加载。"),_("br")])]),t._v(" "),_("tr",[_("td",[t._v("只适用与2.1之后的版本")]),t._v(" "),_("td",[t._v("link是没有任何兼容问题的。"),_("br")])]),t._v(" "),_("tr",[_("td",[t._v("支持使用js去控制dom改变样式")]),t._v(" "),_("td",[t._v("不支持"),_("br")])]),t._v(" "),_("tr",[_("td"),t._v(" "),_("td",[t._v("只能加载css"),_("br")])])])]),t._v(" "),_("h4",{attrs:{id:"get和post请求的区别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#get和post请求的区别"}},[t._v("#")]),t._v(" get和post请求的区别")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("get")]),t._v(" "),_("th",[t._v("post"),_("br")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("参数长度有限制")]),t._v(" "),_("td",[t._v("参数长度无限制"),_("br")])]),t._v(" "),_("tr",[_("td",[t._v("get会把请求的数据附加在url上")]),t._v(" "),_("td",[t._v("post请求会把数据附加在请求体中"),_("br")])]),t._v(" "),_("tr",[_("td",[t._v("get是明文传输")]),t._v(" "),_("td",[t._v("post不是明文传输"),_("br")])]),t._v(" "),_("tr",[_("td",[t._v("请求能缓存")]),t._v(" "),_("td",[t._v("不能缓存"),_("br")])])])]),t._v(" "),_("h4",{attrs:{id:"http和https区别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#http和https区别"}},[t._v("#")]),t._v(" http和https区别")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("http")]),t._v(" "),_("th",[t._v("https")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("80端口")]),t._v(" "),_("td",[t._v("443端口"),_("br")])]),t._v(" "),_("tr",[_("td",[t._v("无需申请证书")]),t._v(" "),_("td",[t._v("需要申请证书"),_("br")])]),t._v(" "),_("tr",[_("td",[t._v("超文本传输协议")]),t._v(" "),_("td",[t._v("ssl加密协议"),_("br")])]),t._v(" "),_("tr",[_("td",[t._v("快")]),t._v(" "),_("td",[t._v("慢（因为会有一个ssl包需要传输）"),_("br")])])])])])}),[],!1,null,null,null);v.default=s.exports}}]);