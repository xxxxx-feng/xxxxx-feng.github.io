(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{418:function(t,s,a){"use strict";a.r(s);var n=a(44),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("函数带括号：会找到这个函数并且立即执行，括号是“函数调用运算符”，相当于在执行这样一个函数\n函数不带括号：函数名只是一个变量，指向函数，并不会立即执行，只有在特定的情况下才会触发执行")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("body"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("button id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"btn"')]),t._v(" onclick"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"btnClick()"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("点击"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("button"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("在button标签中绑定onclick事件，\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("要写成test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("，不能写成test，\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("test是指向一个"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v("，\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("当点击按钮的时候，\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("就告诉浏览器执行test函数，\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("而test只是告诉了浏览器test函数，并没有要执行\n       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ---------------------------------------")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("标签内的事件属性的值是由引号包裹的，\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("代表的是当点击该元素时，执行引号内的代码，直接把引号内的代码拿出来跑，\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("如果你不加括号，那就不会调用那个函数。\n     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n    简单来说就是带括号的是执行一次函数，不带括号的函数就是一个函数对象\n    */")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" btn "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'btn'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("btn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("btnClick")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'点击了'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    btn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("onclick "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("btnClick")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * btnClick() 表示直接执行，在onclick绑定时就执行了btnClick函数\n     * 所以onclick绑定的东西是test执行后的结果或者返回函数，\n     * 如果想绑定的是某个函数的返回函数(return function{})，就可以用οnclick=btnClick();\n    */")]),t._v("\n    btn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("onclick "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" btnClick\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * btn.onclick 只是给btn一个函数地址，会把btnClick函数绑定在按钮上，当点击的时候就执行\n    */")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("body"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v('问题来了，在 vue 中，@click="handlr" 可以带括号，也可以不带括号，如何实现呢？')]),t._v(" "),a("ol",[a("li",[t._v("vue 初始化的时候，将 method 中的方法代理到 vue[key]的同时修饰了事件的回调函数.\n通过 initState(), initMethods(), bind() 绑定了作用域")]),t._v(" "),a("li",[t._v("vue 进入 compile 环节需要将该 div 变成 ast(抽象语法树）。当编译到该 div 时经过核心函数 genHandler(), 如果事件函数有修饰符。就处理完修饰符，添加修饰符对应的函数语句。再返回。这个过程还会单独对 native 修饰符做特殊处理。")]),t._v(" "),a("li",[t._v("compile 完后自然就 render"),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('_c(\'div\',{attrs:{"id":"test1"},\non:{"click":click1}},\n[_v("click1")]),_v(" "),\n_c(\'div\',{attrs:{"id":"test2"},\non:{"click":function($event){$event.stopPropagation();click2($event)}}}\n')])])])]),t._v(" "),a("li",[t._v("虚拟 dom --- > 真实 dom 的时候。会调用核心函数 add$1() 通过 addEventListener 绑定相应事件")])])])}),[],!1,null,null,null);s.default=r.exports}}]);